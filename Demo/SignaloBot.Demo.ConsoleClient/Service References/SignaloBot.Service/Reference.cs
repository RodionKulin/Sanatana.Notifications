//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignaloBot.Demo.ConsoleClient.SignaloBot.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectId", Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
    [System.SerializableAttribute()]
    public partial struct ObjectId : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _incrementField;
        
        private int _machineField;
        
        private short _pidField;
        
        private int _timestampField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _increment {
            get {
                return this._incrementField;
            }
            set {
                if ((this._incrementField.Equals(value) != true)) {
                    this._incrementField = value;
                    this.RaisePropertyChanged("_increment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _machine {
            get {
                return this._machineField;
            }
            set {
                if ((this._machineField.Equals(value) != true)) {
                    this._machineField = value;
                    this.RaisePropertyChanged("_machine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public short _pid {
            get {
                return this._pidField;
            }
            set {
                if ((this._pidField.Equals(value) != true)) {
                    this._pidField = value;
                    this.RaisePropertyChanged("_pid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _timestamp {
            get {
                return this._timestampField;
            }
            set {
                if ((this._timestampField.Equals(value) != true)) {
                    this._timestampField = value;
                    this.RaisePropertyChanged("_timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SignaloBot.Service.ISignalServiceOf_ObjectId")]
    public interface ISignalServiceOf_ObjectId {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignalServiceOf_ObjectId/RaiseKeyValueEvent", ReplyAction="http://tempuri.org/ISignalServiceOf_ObjectId/RaiseKeyValueEventResponse")]
        void RaiseKeyValueEvent(System.Nullable<Service.ObjectId> groupID, System.Nullable<Service.ObjectId> userID, int categoryID, string topicID, System.Collections.Generic.Dictionary<string, string> values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignalServiceOf_ObjectId/RaiseKeyValueEvent", ReplyAction="http://tempuri.org/ISignalServiceOf_ObjectId/RaiseKeyValueEventResponse")]
        System.Threading.Tasks.Task RaiseKeyValueEventAsync(System.Nullable<Service.ObjectId> groupID, System.Nullable<Service.ObjectId> userID, int categoryID, string topicID, System.Collections.Generic.Dictionary<string, string> values);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISignalServiceOf_ObjectIdChannel : Service.ISignalServiceOf_ObjectId, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignalServiceOf_ObjectIdClient : System.ServiceModel.ClientBase<Service.ISignalServiceOf_ObjectId>, Service.ISignalServiceOf_ObjectId {
        
        public SignalServiceOf_ObjectIdClient() {
        }
        
        public SignalServiceOf_ObjectIdClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SignalServiceOf_ObjectIdClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignalServiceOf_ObjectIdClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignalServiceOf_ObjectIdClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RaiseKeyValueEvent(System.Nullable<Service.ObjectId> groupID, System.Nullable<Service.ObjectId> userID, int categoryID, string topicID, System.Collections.Generic.Dictionary<string, string> values) {
            base.Channel.RaiseKeyValueEvent(groupID, userID, categoryID, topicID, values);
        }
        
        public System.Threading.Tasks.Task RaiseKeyValueEventAsync(System.Nullable<Service.ObjectId> groupID, System.Nullable<Service.ObjectId> userID, int categoryID, string topicID, System.Collections.Generic.Dictionary<string, string> values) {
            return base.Channel.RaiseKeyValueEventAsync(groupID, userID, categoryID, topicID, values);
        }
    }
}
